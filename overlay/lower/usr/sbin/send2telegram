#!/bin/env sh

. /usr/share/common

show_help() {
	echo "Usage: $0 [options] [clip|motion|snap]
Where:
	-c channel  Telegram channel ID.
	            See https://gist.github.com/mraaroncruz/e76d19f7d61d59419002db54030ebe35
	-f file     Send file.
	-m message  Send message.
	-s          Disable notification.
	-t token    Telegram bot token. See https://t.me/botfather if you need one.
	-v          Verbose output.
	-h          Show this help.
" >&2
	exit 0
}

# override config values with command line arguments
while getopts c:f:m:st:vh flag; do
	case "$flag" in
		c) telegram_channel=$OPTARG ;;
		m) telegram_message=$OPTARG ;;
		f) telegram_file=$OPTARG ;;
		s) telegram_silent="true" ;;
		t) telegram_token=$OPTARG ;;
		v) verbose="true" ;;
		h) show_help ;;
	esac
done

shift $((OPTIND - 1))

if [ $# -ne 0 ]; then
	case "$1" in
		clip)
			telegram_attach_photo="false"
			telegram_attach_video="true"
			;;
		motion)
			telegram_attach_photo="true"
			telegram_attach_video="true"
			;;
		snap)
			telegram_attach_photo="true"
			telegram_attach_video="false"
			;;
	esac
fi

check_vbuffer() {
	if [ ! -f "$VBUFFER_FILE" ]; then
		echo_error "Video buffer not found"
		cleanup
		exit 1
	fi
}

cleanup() {
	for f in $garbage; do
		[ -f "$f" ] && rm "$f"
	done
}

copy_photo() {
	local tmpfile="$(mktemp -u).jpg"
	prudyntctl snapshot -c 0 > "$tmpfile"
	garbage="$garbage $tmpfile"
	echo "$tmpfile"
}

copy_video() {
	check_vbuffer
	local tmpfile="$(mktemp -u).${VBUFFER_FILE##*.}"
	cp -f "$VBUFFER_FILE" "$tmpfile"
	garbage="$garbage $tmpfile"
	echo "$tmpfile"
}

parse_caption() {
	echo "$telegram_caption" | sed "s/%hostname/$(hostname -s)/;s/%datetime/$(date @$(stat -c%Z $1))/"
}

if [ -z "$telegram_token" ]; then
	echo_error "Telegram token not found"
	cleanup
	exit 1
fi

if [ -z "$telegram_channel" ]; then
	echo_error "Telegram channel not found"
	cleanup
	exit 1
fi

if [ "true" = "$verbose" ]; then
	command="$CURL --verbose"
else
	command="$CURL --silent"
fi
command="$command -H 'Content-Type: multipart/form-data' -F 'chat_id=$telegram_channel'"

if [ "true" = "$telegram_silent" ]; then
	command="$command -F 'disable_notification=true'"
fi

command="$command --url https://api.telegram.org/bot$telegram_token/"

# no further modifications to command after this point

if [ "true" = "$telegram_attach_video" ] && [ "true" = "$telegram_attach_photo" ]; then
	# https://core.telegram.org/bots/api#sendmediagroup
	photo=$(copy_photo)
	caption=$(parse_caption $photo)
	command="${command}sendMediaGroup -F 'snap=@$photo'"
	if [ -n "$telegram_message" ]; then
		caption="$caption - $telegram_message"
	fi
	media='[{"type":"photo","media":"attach://snap","caption":"'$caption'"},'
	inode=$(stat -c%i $VBUFFER_FILE)

	check_vbuffer
	video1=$(copy_video)
	command="$command -F 'video1=@$video1'"
	media=$media'{"type":"video","media":"attach://video1"},'
	while [ $inode -eq $(stat -c%i $VBUFFER_FILE) ]; do
		n=$((n + 1))
		if [ "$n" -ge 10 ]; then
			echo_error "Give up after $n attempts."
			cleanup
			exit 1
		fi
		sleep 1
	done

	check_vbuffer
	video2=$(copy_video)
	command="$command -F 'video2=@$video2'"
	media=$media'{"type":"video","media":"attach://video2"}]'
	command="$command -F 'media=$media'"
elif [ "true" = "$telegram_attach_video" ]; then
	# https://core.telegram.org/bots/api#sendvideo
	check_vbuffer
	video1=$(copy_video)
	caption="$(parse_caption $video1)"
	if [ -n "$telegram_message" ]; then
		caption="$caption - $telegram_message"
	fi
	command="${command}sendVideo -F 'video=@$video1' -F 'caption=$caption'"
elif [ "true" = "$telegram_attach_photo" ]; then
	# https://core.telegram.org/bots/api#sendphoto
	photo=$(copy_photo)
	caption="$(parse_caption $photo)"
	if [ -n "$telegram_message" ]; then
		caption="$caption - $telegram_message"
	fi
	command="${command}sendPhoto -F 'photo=@$photo' -F 'caption=$caption'"
elif [ -n "$telegram_message" ]; then
	# https://core.telegram.org/bots/api#sendmessage
	command="${command}sendMessage -F 'text=$telegram_message'"
elif [ -n "$telegram_file" ] && [ -f "$telegram_file" ]; then
	# https://core.telegram.org/bots/api#senddocument
	caption="$(parse_caption $telegram_file)"
	if [ -n "$telegram_message" ]; then
		caption="$caption - $telegram_message"
	fi
	command="${command}sendDocument -F 'document=@$1' -F 'caption=$caption'"
else
	echo_error "Nothing to send"
	exit 1
fi

if [ "true" = "$verbose" ]; then
	echo_command "$command"
fi

if ! sh -c "$command" >/dev/null; then
	echo_error "Failed to send message to Telegram"
	cleanup
	exit 1
fi

cleanup

exit 0
